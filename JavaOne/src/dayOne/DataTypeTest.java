package dayOne;

public class DataTypeTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		 //byte a = 128; // 범위를 벗어남
		 byte a = 127;
		 
		 //byte b = -129; // 범위를 벗어남.
		 byte b = -127;
		 
		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		
		 //long c = 10000000000; // L을 안붙이면 int로 인식함.
		 long c = 10000000000L;
	
		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 char ch1 = 'A'; // 아스키 코드 65
		 char ch2 = 'B'; // 아스키 코드 66
		 System.out.println(ch1 + ch2 ); //131
		 System.out.println(ch1+""+ch2); //AB 
		 
		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /**
		  * float e =123.123; 
		  * 실수는 기본형이 double로 인식하기 때문에 F를 붙여줘야함. 
		  */
		 
		 float h = 123.122F;
		 double j= 123.123;
		 
		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /*
		  * reference 타입.
		  * heap영역에서 값이 있는 장소의 주소가 들어있기때문에 reference타입이라고 함. 
		  * 
		  * 즉, 실제 값이 저장된 것이 아닌 데이터가 저장된 메모리 위치를 저장함.
		  */
		 String m1 = "abcd"; // reference 타입. 
		 String m2 = "abcd";
		 System.out.println("m1 = m2 :" +  (m1==m2)); //true
		 

		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /**
		  * 객체를 생성하면 서로다른 메모리 위치를 지정한다.
		  * 
		  *  == 
		  *   - 기본자료형에서는 값이 같은지 비교함.
		  *   - 객체일경우 메모리 주소가 같은지 비교함.
		  *   
		  *  equals : 값을 비교한다.
		  */
		 int e1 = 5;
		 int e2 = 5;
		 System.out.println(e1 == e2);
		 
		 DataTypeTest d1 = new DataTypeTest(); //DataTypeTest@64cee07 
		 System.out.println(d1);
		 
		 DataTypeTest d2 = new DataTypeTest(); //DataTypeTest@1761e840
		 System.out.println(d2);
		 
		 // DataTypeTest@64cee07  == DataTypeTest@1761e840 이기 때문에 false
		 System.out.print(d1==d2); //false
		
		 

		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /**
		  * 리터럴 ( literal )
		  * 자료형 없이 값만 입력하면 jvm이 자동으로 대표적인 자료형으로 자동변환
		  *  	정수: int
		  *  	실수: double
		  */
		 System.out.println(100); // int
		 System.out.println(123.123); // double

		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /**
		  * 캐스케이딩 : 수동적 형변환
		  */
		 
		 int casting_a = (int)3.2;
		 byte casting_b = (byte)5;
		 
		 
		 //-----------------------------------------------------------------------------------------------------------------------------//
		 
		 /**
		  * 리터럴 때문에 bt와 be는 정수의 대표적인 자료형 int값을 넣은 상황.
		  * result의 연산결과는 int로 바뀌게 돼서 result가 오류가 남.
		  */
		 byte bt = 30;
		 byte be = 20;
		 
		 //byte result = bt + be;
		 byte result1 = (byte) (bt+ be);
		 int result2 = bt+be;
		 
		 
	}

}
